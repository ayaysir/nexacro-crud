<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="FrmInput" left="0" top="0" width="420" height="240" titletext="New Form">
    <Layouts>
      <Layout>
        <Edit id="writer" taborder="0" left="30.48%" top="70" right="13.33%" height="32"/>
        <Edit id="message" taborder="1" left="30.48%" top="120" right="13.33%" height="32"/>
        <Static id="Static00" taborder="2" text="이름" left="6.9%" top="75" right="75.24%" height="27"/>
        <Static id="Static01" taborder="3" text="메시지" left="6.9%" top="117" right="75.24%" height="27" onclick="Static01_onclick"/>
        <Button id="btnSubmit" taborder="4" text="OK" left="31.19%" top="171" right="49.05%" height="47" onclick="btnSubmit_onclick"/>
        <Button id="btnBack" taborder="5" text="Back" left="54.52%" top="171" right="25.71%" height="47" onclick="btnBack_onclick"/>
        <Static id="Static02" taborder="6" text="메시지 입력" left="14.52%" top="19" right="17.62%" height="35" style="align:center middle;font:bold 18 맑은 고딕;"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="DatasetRequest">
        <ColumnInfo>
          <Column id="id" type="INT" size="4"/>
          <Column id="writer" type="STRING" size="20"/>
          <Column id="message" type="STRING" size="300"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="DatasetResponse">
        <ColumnInfo>
          <Column id="forward" type="STRING" size="256"/>
          <Column id="resultMessage" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.0"><![CDATA[
this.btnBack_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	this.go("Base::FrmPortal.xfdl");
}

this.btnSubmit_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var writer = this.writer.value;
	var message = this.message.value;
	
	// 비어 있는 행 추가
	var row = this.DatasetRequest.addRow(); // 숫자 리턴
	this.DatasetRequest.setColumn(row, "id", 0);
	this.DatasetRequest.setColumn(row, "writer", writer);
	this.DatasetRequest.setColumn(row, "message", message);
	
	var id = "request";
	var url = "../input.msg";
	var reqDs = "request=DatasetRequest"; // DatasetRequest를 리퀘스트에 담아 보낸다.
	var respDs = "DatasetResponse=response"; // 서버가 response라는 이름으로 DatasetResponse를 보낸다.
											// 왼쪽 자리에는 데이터를 받아올 데이터셋의 아이디를 입력
	var args = "";
	// var args = "writer=" + writer + " message=" + message;
	var callback = "afterComplete"; // 작업이 끝난 후 할 작업을 적는다. 함수의 이름을 문자열로 적는다.
	
	// 데이터를 보내는 방식
	// 1. DS(request dataset)에 보냄
	// 2. arguments에 보냄 (간단한 자료)
	
	this.transaction(id, url, reqDs, respDs, args, callback);
	
	// alert(writer + message);
}

this.afterComplete = function(id, code, msg){
	//alert(this.DatasetResponse.getColumn(0, "forward"));
	alert(this.DatasetResponse.getColumn(0, "resultMessage"));
	this.go(this.DatasetResponse.getColumn(0, "forward"));
}
]]></Script>
  </Form>
</FDL>
